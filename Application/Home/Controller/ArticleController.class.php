<?php
// +----------------------------------------------------------------------
// | OneThink [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013 http://www.onethink.cn All rights reserved.
// +----------------------------------------------------------------------
// | Author: 鬼国二少 <guiguoershao@163.com> <http://www.zjzit.cn>
// +----------------------------------------------------------------------

namespace Home\Controller;

/**
 * 文档模型控制器
 * 文档模型列表和详情
 */
class ArticleController extends HomeController {

    const _CASE    = 1;
    const _NEW     = 2;
    const _PRODUCT = 3;
    const _QIANGXIANG = 4;
    const _GUZHANG = 5;


    public static $category_id = [
        82 => 'xiaosongqiangxiangweixiu',
        83 => 'xiaosongguzhangweixiu',
        70 => 'xiaosongchanpinzhanshi',
        24 => 'xiaosongchenggonganli',
        25 => 'xiaosongzixun',

        84 => 'kateqiangxiangweixiu',
        85 => 'kateguzhangweixiu',
        71 => 'katechanpinzhanshi',
        41 => 'katechenggonganli',
        42 => 'katezixun',

        88 => 'zhuyouqiangxiangweixiu',
        89 => 'zhuyouguzhangweixiu',
        72 => 'zhuyouchanpinzhanshi',
        46 => 'zhuyouchenggonganli',
        47 => 'zhuyouzixun',

        86 => 'shengangqiangxiangweixiu',
        87 => 'shengangguzhangweixiu',
        73 => 'shengangchanpinzhanshi',
        52 => 'shengangchenggonganli',
        51 => 'shengangzixun',

        93 => 'riliqiangxiangweixiu',
        92 => 'riliguzhangweixiu',
        74 => 'rilichanpinzhanshi',
        56 => 'rilichenggonganli',
        55 => 'rilizixun',

        95 => 'kaisiqiangxiangweixiu',
        94 => 'kaisiguzhangweixiu',
        75 => 'kaisichanpinzhanshi',
        60 => 'kaisichenggonganli',
        59 => 'kaisizixun',

        97 => 'jiatengqiangxiangweixiu',
        96 => 'jiatengguzhangweixiu',
        76 => 'jiatengchanpinzhanshi',
        63 => 'jiatengchenggonganli',
        64 => 'jiatengzixun',


        99 => 'sanyiqiangxiangweixiu',
        98 => 'sanyiguzhangweixiu',
        77 => 'sanyichanpinzhanshi',
        69 => 'sanyichenggonganli',
        67 => 'sanyizixun',

        108 => 'libohaierqiangxiangweixiu',
        107 => 'libohaierguzhangweixiu',
        113 => 'libohaierchanpinzhanshi',
        112 => 'libohaierchenggonganli',
        104 => 'woerwozixun',

        101 => 'woerwoqiangxiangweixiu',
        102 => 'woerwoguzhangweixiu',
        106 => 'woerwochanpinzhanshi',
        105 => 'woerwochenggonganli',
        111 => 'libokaierzixun',

        ];


    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

    }

    /* 文档模型频道页 */
	public function index(){
        $this->redirect('article/lists');
	}

	/* 文档模型列表页 */
	public function lists(){
	    $class      = I('get.class');
        @$brand    = I('get.brand');
        @$category = I('get.category');
        @$key      = I('get.keywords');
        @$id       = I('get.id');
//        $key = mb_convert_encoding($key, 'gb2312', 'utf-8');
        $new = D('document')->where("status = 1 and class = 'zixun' ")->order('create_time desc')->limit(8)->select();
        $title = [];
        if($category && !empty($category)){
            $title = D('category')->where("id = $category")->find();
            $sql = "category_id = $category and status = 1";
        }elseif ($key && !empty($key)){
            $sql = "keywords like '%$key%' and status = 1";
        }elseif(!empty($class) && $class=='zixun'){
            $sql = " status = 1 and class = 'zixun' ";
        }elseif(!empty($class) && $class=='anli'){
            $sql = " status = 1 and class = 'anli' ";
        }elseif(!empty($class) && $class=='changjianwenti'){
            $sql = " status = 1 and class = 'changjianwenti' ";
        }elseif(!empty($class) && $class=='weixiuzixun'){
            $sql = " is_article = 1";
        }else{
            $this->error('没有此内容!');
        }
        $total = D('document') -> where($sql) -> count();
        if(!$total){
            $this->error('没有此内容!');
        }


        $n = 8;
        $page = isset($_GET['p'])?intval($_GET['p']):1;
        $pageNum = ceil($total/$n);
        if($pageNum == 0){
            $pageNum = 1;
        }
        $offset = ($page - 1)*$n;
        $alltotal = D("document") -> where($sql) -> order("update_time desc") ->limit("$offset,$n") -> select();
        $first = 1;
        $prev = $page - 1;
        $next = $page + 1;
        $last = $pageNum;
        $this->assign('category_id', self::$category_id);
        $this->assign('new',$new);   // 最新动态
        $this->assign('list',$alltotal);
        $this->assign('list_t',$title);
        $this->assign('fist',$first);
        $this->assign('prev',$prev);
        $this->assign('next',$next);
        $this->assign('last',$last);
        $this->assign("page",$page);
        $this->assign("pageNum",$pageNum);
        $this->assign('total',$total);
        $arr = explode('/', $_SERVER['REQUEST_URI']);
        $this->assign('arr', $arr);
        $this->display('lists');
	}

	/* 文档模型详情页 */
	public function detail($p = 0){

        @$id  = I('get.id');
        if(isset($id) && !empty($id)){
            $Document = D('Document');
            $info     = $Document->detail($id);
            if(!$info){
                $this->error('没有此内容!');
            }
            $keywords = $info['keywords'];
            $keywords = explode(',',$keywords);
            $new          = D('document')->where('status = 1 and class = "zixun"')->limit('8')->order('update_time desc')->select();


            /* 分类信息 */
            $category    = $this->category($info['category_id']);
            $category_id = $category['id'];

            //上下篇
            $prev = D('document')->where("status = 1 and id < $id and category_id = $category_id")->order('id desc')->limit(1)->find();
            $next = D('document')->where("status = 1 and id > $id and category_id = $category_id")->order('id asc')->limit(1)->find();


            $this->assign('prev',$prev);
            $this->assign('next',$next);
            $this->assign('info',$info);
            $this->assign('new',$new);
            $this->assign('keywords',$keywords);


        }

		/* 标识正确性检测 */
		if(!($id && is_numeric($id))){
			$this->error('文档ID错误！');
		}
		/* 页码检测 */
		$p = intval($p);
		$p = empty($p) ? 1 : $p;
		/* 获取详细信息 */
		$Document = D('Document');
		$info = $Document->detail($id);
		if(!$info){
			$this->error('没有此内容');
		}

		/* 分类信息 */
		$category = $this->category($info['category_id']);

		/* 更新浏览数 */
		$map = array('id' => $id);
		$Document->where($map)->setInc('view');
        $arr = explode('/', $_SERVER['REQUEST_URI']);
		/* 模板赋值并渲染模板 */
		$this->assign('page', $p); //页码
        $this->assign('categoryId', self::$category_id);
        $this->assign('arr', $arr);
		$this->display('detail');
	}

    /* 文档分类检测 */
    private function category($id = 0){
        /* 标识正确性检测 */
        $id = $id ? $id : I('get.category', 0);
        if(empty($id)){
            $this->error('没有指定文档分类！');
        }

        /* 获取分类信息 */
        $category = D('Category')->info($id);
        if($category && 1 == $category['status']){
            switch ($category['display']) {
                case 0:
                    $this->error('该分类禁止显示！');
                    break;
                //TODO: 更多分类显示状态判断
                default:
                    return $category;
            }
        } else {
            $this->error('分类不存在或被禁用！');
        }
    }

}
