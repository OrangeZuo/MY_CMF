<?php
// +----------------------------------------------------------------------
// | OneThink [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013 http://www.onethink.cn All rights reserved.
// +----------------------------------------------------------------------
// | Author: 鬼国二少 <guiguoershao@163.com> <http://www.zjzit.cn>
// +----------------------------------------------------------------------

namespace Home\Controller;

/**
 * 文档模型控制器
 * 文档模型列表和详情
 */
class ArticleController extends HomeController {

    const _CASE    = 1;
    const _NEW     = 2;
    const _PRODUCT = 3;


    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

    }

    /* 文档模型频道页 */
	public function index(){
        $this->redirect('article/lists');
	}

	/* 文档模型列表页 */
	public function lists(){
        $new         = D('document')->where('status = 1 and class = "new"')->limit('8')->order('update_time desc')->select();
        $category = I('get.category');
        if(!empty($category) && isset($category)){
            if($category == self::_CASE){
                $sql = 'status = 1 and class = "case"';
            }elseif ($category == self::_NEW){
                $sql = 'status = 1 and class = "new"';
            }elseif ($category == self::_PRODUCT){
                $sql = 'status = 1 and class = "product"';
            }
        }else{
            $sql = 'class = "product" or class = "case" or class = "product" and status = 1';
        }

        $total = D('document') -> where($sql) -> count();
        $n = 8;
        $page = isset($_GET['page'])?intval($_GET['page']):1;
        $pageNum = ceil($total/$n);
        if($pageNum == 0){
            $pageNum = 1;
        }
        $offset = ($page - 1)*$n;
        $alltotal = D("document") -> where($sql) -> order("update_time desc") ->limit("$offset,$n") -> select();
        $first = 1;
        $prev = $page - 1;
        $next = $page + 1;
        $last = $pageNum;

        $this->assign('new',$new);   // 最新动态
        $this->assign('list',$alltotal);
        $this->assign('fist',$first);
        $this->assign('prev',$prev);
        $this->assign('next',$next);
        $this->assign('last',$last);
        $this->assign("page",$page);
        $this->assign("pageNum",$pageNum);
        $this->assign('total',$total);
        $this->display('lists');
	}

	/* 文档模型详情页 */
	public function detail($p = 0){

        $id = I('get.id');
		/* 标识正确性检测 */
		if(!($id && is_numeric($id))){
			$this->error('文档ID错误！');
		}
		/* 页码检测 */
		$p = intval($p);
		$p = empty($p) ? 1 : $p;
		/* 获取详细信息 */
		$Document = D('Document');
		$info = $Document->detail($id);
		if(!$info){
			$this->error($Document->getError());
		}

		/* 分类信息 */
		$category = $this->category($info['category_id']);

		/* 更新浏览数 */
		$map = array('id' => $id);
		$Document->where($map)->setInc('view');

		/* 模板赋值并渲染模板 */
		$this->assign('category', $category);
		$this->assign('info', $info);
		$this->assign('page', $p); //页码
		$this->display('detail');
	}

    /* 文档分类检测 */
    private function category($id = 0){
        /* 标识正确性检测 */
        $id = $id ? $id : I('get.category', 0);
        if(empty($id)){
            $this->error('没有指定文档分类！');
        }

        /* 获取分类信息 */
        $category = D('Category')->info($id);
        if($category && 1 == $category['status']){
            switch ($category['display']) {
                case 0:
                    $this->error('该分类禁止显示！');
                    break;
                //TODO: 更多分类显示状态判断
                default:
                    return $category;
            }
        } else {
            $this->error('分类不存在或被禁用！');
        }
    }

}
